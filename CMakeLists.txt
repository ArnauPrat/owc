CMAKE_MINIMUM_REQUIRED (VERSION 2.8.4)
PROJECT(openwarclient)

set( CMAKE_EXPORT_COMPILE_COMMANDS 1 )

if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)
  message(STATUS "Setting build type to 'Release' as none was specified.")
  set(CMAKE_BUILD_TYPE Release)
endif()

set(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake/modules/;${CMAKE_MODULE_PATH}")
set(CMAKE_INSTALL_PREFIX ${CMAKE_BINARY_DIR}/dist)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)


IF( UNIX )
  SET(PLATFORM "_LINUX")
ENDIF(UNIX)

IF( WIN32 )
  SET(PLATFORM "_WINDOWS")
ENDIF(WIN32)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -D${PLATFORM}")

enable_testing()
#set(BOOST_ROOT /usr/include/boost )
#ADD_SUBDIRECTORY(lib/reflection/Source/Runtime)
#ADD_SUBDIRECTORY(lib/reflection/Source/Parser)


###################################################
#               CONFIGURING OGRE                  #
###################################################

STRING(TOUPPER ${CMAKE_BUILD_TYPE} CMAKE_BUILD_TYPE_UC)

# VARIABLES WITH OGRE INSTALL PATHS
SET(OGRE_ROOT "/home/aprat/source/ogre")
SET(OGRE_BINARY_DIR_RELEASE "${OGRE_ROOT}/build-release")
SET(OGRE_BINARY_DIR_DEBUG "${OGRE_ROOT}/build-debug")
SET(OGRE_INSTALL_DIR "${CMAKE_BINARY_DIR}/lib/ogre")
SET(OGRE_INSTALL_DIR_RELEASE "${OGRE_INSTALL_DIR}/release")
SET(OGRE_INSTALL_DIR_DEBUG "${OGRE_INSTALL_DIR}/debug")
SET(OGRE_LIBRARY_DIRS_RELEASE "${OGRE_INSTALL_DIR_RELEASE}/lib")
SET(OGRE_LIBRARY_DIRS_DEBUG "${OGRE_INSTALL_DIR_DEBUG}/lib")

# OGRE COMPILATION OPTIONS
SET(OGRE_CONFIG_FLAGS 
    "-DOGRE_BUILD_COMPONENT_HLMS_PBS_MOBILE=FALSE"
    "-DOGRE_BUILD_COMPONENT_HLMS_UNLIT_MOBILE=FALSE"
    "-DOGRE_BUILD_PLUGIN_PFX=FALSE"
    "-DOGRE_BUILD_SAMPLES=FALSE"  
    "-DOGRE_BUILD_SAMPLES2=TRUE"
    "-DOGRE_CONFIG_THREADS=1"
    "-DOGRE_BUILD_BOOST=FALSE"
    "-DOGRE_CONFIG_THREAD_PROVIDER=std"
    "-DOGREDEPS_BUILD_FREEIMAGE=TRUE"
    "-DOGREDEPS_BUILD_FREETYPE=TRUE"
    "-DOGREDEPS_BUILD_ZLIB=TRUE"
  )

# COMMANDS TO COMPILE AND INSTALL OGRE
include(ExternalProject)
ExternalProject_Add( 
  ogre-RELEASE
  PREFIX 
    "${OGRE_ROOT}"
  SOURCE_DIR 
    "${OGRE_ROOT}"
  CMAKE_ARGS 
    ${OGRE_CONFIG_FLAGS}
    "-DCMAKE_BUILD_TYPE=Release"
    "-DCMAKE_INSTALL_PREFIX=${OGRE_INSTALL_DIR_RELEASE}"
  BINARY_DIR 
    "${OGRE_BINARY_DIR_RELEASE}"
  INSTALL_DIR 
    "${OGRE_INSTALL_DIR_RELEASE}"
)


ExternalProject_Add( 
  ogre-DEBUG
  PREFIX 
    "${OGRE_ROOT}"
  SOURCE_DIR 
    "${OGRE_ROOT}"
  CMAKE_ARGS 
    ${OGRE_CONFIG_FLAGS}
    "-DCMAKE_BUILD_TYPE=Debug"
    "-DCMAKE_INSTALL_PREFIX=${OGRE_INSTALL_DIR_DEBUG}"
  BINARY_DIR 
    "${OGRE_BINARY_DIR_DEBUG}"
  INSTALL_DIR 
    "${OGRE_INSTALL_DIR_DEBUG}"
)

SET(OGRE_REQUIRED_LIBRARIES
  libOgreMain
  )

SET(OGRE_REQUIRED_PLUGINS
  RenderSystem_GL3Plus
  )


# SETTING UP OGRE INCLUDES AND LIBRARIES DEPENDING ON TARGET
#IF(${CMAKE_BUILD_TYPE} STREQUAL "Release")
#  SET(OGRE_INCLUDE_DIRS
#    "${OGRE_INSTALL_DIR_RELEASE}/include"
#    "${OGRE_INSTALL_DIR_RELEASE}/include/OGRE")
#  SET(OGRE_LIBRARIES 
#    "${OGRE_INSTALL_DIR_RELEASE}/lib/libOgreMain.so")
#  SET(OGRE_DEPENDENCY "ogre-release")
#  set(CMAKE_MODULE_PATH "${OGRE_INSTALL_DIR_RELEASE}/lib/OGRE/cmake/;${CMAKE_MODULE_PATH}")
#ELSE(${CMAKE_BUILD_TYPE} STREQUAL "Release") 
#  SET(OGRE_INCLUDE_DIRS
#    "${OGRE_INSTALL_DIR_DEBUG}/include"
#    "${OGRE_INSTALL_DIR_DEBUG}/include/OGRE")
#  SET(OGRE_LIBRARIES 
#    "${OGRE_INSTALL_DIR_DEBUG}/lib/libOgreMain_d.so")
#  SET(OGRE_DEPENDENCY "ogre-debug")
#  set(CMAKE_MODULE_PATH "${OGRE_INSTALL_DIR_DEBUG}/lib/OGRE/cmake/;${CMAKE_MODULE_PATH}")
#ENDIF(${CMAKE_BUILD_TYPE} STREQUAL "Release")

IF(${CMAKE_BUILD_TYPE_UC} STREQUAL "DEBUG")
  SET(LIBSUFFIX "_d")
ENDIF(${CMAKE_BUILD_TYPE_UC} STREQUAL "DEBUG")

SET(OGRE_INCLUDE_DIRS
  "${OGRE_INSTALL_DIR_${CMAKE_BUILD_TYPE_UC}}/include/"
  "${OGRE_INSTALL_DIR_${CMAKE_BUILD_TYPE_UC}}/include/OGRE/"
  )

foreach( LIBRARY ${OGRE_REQUIRED_LIBRARIES} )
  SET(OGRE_LIBRARIES 
    ${OGRE_LIBRARIES}
    ${OGRE_INSTALL_DIR_${CMAKE_BUILD_TYPE_UC}}/lib/${LIBRARY}${LIBSUFFIX}.so)

  add_custom_command(
    TARGET ogre-${CMAKE_BUILD_TYPE_UC} POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy 
    ${OGRE_INSTALL_DIR_${CMAKE_BUILD_TYPE_UC}}/lib/${LIBRARY}*
    ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/client)
endforeach( LIBRARY )

foreach( PLUGIN ${OGRE_REQUIRED_PLUGINS} )
  add_custom_command(
    TARGET ogre-${CMAKE_BUILD_TYPE_UC} POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy 
    ${OGRE_INSTALL_DIR_${CMAKE_BUILD_TYPE_UC}}/lib/OGRE/${PLUGIN}${LIBSUFFIX}*
    ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/client)
endforeach( PLUGIN )

SET(OGRE_DEPENDENCY "ogre-${CMAKE_BUILD_TYPE_UC}")
SET(CMAKE_MODULE_PATH "${OGRE_INSTALL_DIR_${CMAKE_BUILD_TYPE_UC}}/lib/OGRE/cmake/;${CMAKE_MODULE_PATH}")

add_custom_command(
  TARGET ogre-RELEASE POST_BUILD
  COMMAND ${CMAKE_COMMAND} -E copy_directory 
  ${OGRE_INSTALL_DIR_RELEASE}/share/OGRE/Media
  ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/client/Media)

add_custom_command(
  TARGET ogre-RELEASE POST_BUILD
  COMMAND ${CMAKE_COMMAND} -E copy_directory 
  ${CMAKE_SOURCE_DIR}/share/client/
  ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/client/)

# PRINTING OGRE CONFIG SETTINGS
MESSAGE(STATUS "OGRE_ROOT: ${OGRE_ROOT}")
MESSAGE(STATUS "OGRE_BINARY_DIR_RELEASE ${OGRE_BINARY_DIR_RELEASE}}")
MESSAGE(STATUS "OGRE_BINARY_DIR_DEBUG ${OGRE_BINARY_DIR_DEBUG}")
MESSAGE(STATUS "OGRE_INSTALL_DIR ${OGRE_INSTALL_DIR}")
MESSAGE(STATUS "OGRE_INSTALL_DIR_RELEASE ${OGRE_INSTALL_DIR_RELEASE}")
MESSAGE(STATUS "OGRE_INSTALL_DIR_DEBUG ${OGRE_INSTALL_DIR_DEBUG}")
MESSAGE(STATUS "OGRE_LIBRARY_DIRS_RELEASE ${OGRE_LIBRARY_DIRS_RELEASE}")
MESSAGE(STATUS "OGRE_LIBRARY_DIRS_DEBUG ${OGRE_LIBRARY_DIRS_DEBUG}")
MESSAGE(STATUS "OGRE_REQUIRED_LIBRARIES ${OGRE_REQUIRED_LIBRARIES}")
MESSAGE(STATUS "OGRE_REQUIRED_PLUGINS ${OGRE_REQUIRED_PLUGINS}")
MESSAGE(STATUS "OGRE_INCLUDE_DIRS ${OGRE_INCLUDE_DIRS}")
MESSAGE(STATUS "OGRE_LIBRARIES ${OGRE_LIBRARIES}")

#setting up ois

ADD_SUBDIRECTORY(src/furious)
ADD_SUBDIRECTORY(src/tnasdk)
ADD_SUBDIRECTORY(src/client)


## COPY OGRE SHARED LIBRARIEs
#add_custom_command(
#  TARGET ogre-release POST_BUILD
#  COMMAND ${CMAKE_COMMAND} -E copy 
#  ${OGRE_INSTALL_DIR_RELEASE}/lib/libOgreMain*
#					${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/client)
#
### COPY OGRE RELEASE PLUGINS 
#add_custom_command(
#  TARGET ogre-release POST_BUILD
#  COMMAND ${CMAKE_COMMAND} -E copy 
#  				${OGRE_INSTALL_DIR_RELEASE}/lib/OGRE/RenderSystem_GL3Plus*
#					${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/client)

